@model task5.Models.Details

@{
    ViewBag.Title = "Index";
    <a href="~/Views/_LayoutPage1.cshtml"></a>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
}


<h2 class="text-center">Create New Record</h2>

@using (Html.BeginForm("Index", "Details", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container mt-4">
        <div class="row">
            <div class="col-md-8 offset-md-2">
                <div class="card">
                    <div class="card-header">
                        <h4>Create</h4>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Name, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Mobile, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Mobile, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.StateId, new { @class = "form-label" })
                            <select name="StateId" id="stateDropdown" class="form-control">
                                <option value="">Select State</option>
                                @foreach (var state in (SelectList)ViewBag.States)
                                {
                                    <option value="@state.Value" @(Model.StateId == Convert.ToInt32(state.Value) ? "selected" : "")>@state.Text</option>
                                }
                            </select>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.CityId, new { @class = "form-label" })
                            <select name="CityId" id="cityDropdown" class="form-control">
                                <option value="">Select City</option>
                                @foreach (var city in (SelectList)ViewBag.Cities)
                                {
                                    <option value="@city.Value" @(Model.CityId == Convert.ToInt32(city.Value) ? "selected" : "")>@city.Text</option>
                                }
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="CreatedOn"></label>
                            @Html.TextBoxFor(model => model.CreatedOn, "{0:yyyy-MM-dd}", new { @class = "form-control hidden-field", style = "width:185px;background:E1EBF9;", @readonly = "readonly", type = "date" })
                        </div>
                        <div class="form-group">
                            <label>Hobbies</label><br />
                            @if (Model.Hobbies == null)
                            {
                                Model.Hobbies = new List<string>();
                            }
                            @foreach (var hobby in new[] { "Cricket", "Chess", "Reading", "Swimming" })
                            {
                                <div class="form-check">
                                    @Html.CheckBox("Hobbies",Model.Hobbies.Contains(hobby),  new { @class = "form-check-input", id = hobby, value = hobby })
                                    @Html.Label(hobby, new { @class = "form-check-label", @for = hobby })
                                </div>
                            }
                        </div>



                        <div class="form-group text-center">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<style>
    .hidden-field {
        display: none;
    }
</style>

<script src="~/Scripts/jquery-3.7.1.js"></script>
<script src="~/Scripts/umd/popper.js"></script>
<script src="~/Scripts/bootstrap.js"></script>
<script>
    $(document).ready(function () {
        $('#stateDropdown').change(function () {
            var stateId = $(this).val();
            if (stateId) {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetCitiesByStateId", "Details")',
                    data: { StateId: stateId },
                    success: function (cities) {
                        $('#cityDropdown').empty();
                        $('#cityDropdown').append($('<option>').text('Select City').attr('value', ''));
                        $.each(cities, function (i, city) {
                            $('#cityDropdown').append($('<option>').text(city.CityName).attr('value', city.CityId));
                        });
                    },
                    error: function () {
                        alert('Failed to load cities.');
                    }
                });
            } else {
                $('#cityDropdown').empty();
                $('#cityDropdown').append($('<option>').text('Select City').attr('value', ''));
            }
        });
    });
</script>
